<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:sfcSimulator="clr-namespace:Hermes.Features.SfcSimulator"
             xmlns:controls="clr-namespace:SukiUI.Controls;assembly=SukiUI"
             xmlns:converters="clr-namespace:Hermes.Common.Converters"
             xmlns:theme="clr-namespace:SukiUI.Theme;assembly=SukiUI"
             mc:Ignorable="d" d:DesignWidth="1250" d:DesignHeight="650"
             x:Class="Hermes.Features.SfcSimulator.SfcSimulatorView"
             x:DataType="sfcSimulator:SfcSimulatorViewModel">

    <UserControl.Styles>
        <Style Selector="TextBlock.Running">
            <Setter Property="Text" Value="Running" />
        </Style>
        <Style Selector="TextBlock.Stopped">
            <Setter Property="Text" Value="Stopped" />
        </Style>
    </UserControl.Styles>

    <ScrollViewer
        HorizontalAlignment="Center"
        VerticalScrollBarVisibility="Auto">

        <WrapPanel Margin="{StaticResource DefaultMargin}"
                   theme:WrapPanelExtensions.AnimatedScroll="True"
                   Orientation="Horizontal">

            <!-- Sfc Simulator -->
            <controls:GlassCard
                Margin="{StaticResource DefaultMargin}">
                <StackPanel
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    Spacing="{StaticResource DefaultSpacing}">

                    <StackPanel
                        Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Spacing="5">

                        <avalonia:MaterialIcon
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource SukiText}"
                            Margin="0 0 10 0"
                            Width="80"
                            Height="80"
                            Kind="{Binding IsRunning, Converter={x:Static converters:BoolToIconConverters.Connection}}" />

                        <StackPanel
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            MinWidth="250"
                            Spacing="10">

                            <StackPanel
                                Orientation="Horizontal"
                                Spacing="2">

                                <TextBlock
                                    VerticalAlignment="Center"
                                    Classes="h4"
                                    Margin="0"
                                    Text="Status: " />

                                <TextBlock
                                    VerticalAlignment="Center"
                                    Classes.Stopped="{Binding !IsRunning}"
                                    Classes.Running="{Binding IsRunning}" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <Button
                        Classes="Flat"
                        Content="Start"
                        Command="{Binding StartCommand}"
                        IsVisible="{Binding !IsRunning}" />

                    <Button
                        Classes="Flat Accent"
                        Content="Stop"
                        Command="{Binding StopCommand}"
                        IsVisible="{Binding IsRunning}" />

                    <Label>Response Mode:</Label>

                    <ComboBox
                        ItemsSource="{Binding SfcErrorTypes}"
                        SelectedItem="{Binding Mode, Mode=TwoWay}" />
                </StackPanel>
            </controls:GlassCard>

            <!-- Buttons -->
            <controls:GlassCard
                Margin="{StaticResource DefaultMargin}">
                <StackPanel
                    VerticalAlignment="Center"
                    Spacing="{StaticResource DefaultSpacing}">

                    <Button
                        Classes="Flat Outlined"
                        Content="Create Pass Logfile"
                        Command="{Binding CreatePassLogfileCommand}" />

                    <Button
                        Classes="Flat Outlined"
                        Content="Create Pass Logfile With Custom Defect"
                        Command="{Binding CreatePassLogfileWithCustomDefectCommand}" />

                    <Button
                        Classes="Flat Accent Outlined"
                        Content="Create Fail Logfile"
                        Command="{Binding CreateFailLogfileCommand}" />

                    <Button
                        Classes="Flat Accent Outlined"
                        Content="Create Critical Fail Logfile"
                        Command="{Binding CreateCriticalFailLogfileCommand}" />

                    <Button
                        Classes="Flat Accent Outlined"
                        Content="Create Fail Logfile With Custom Defect"
                        Command="{Binding CreateFailLogfileWithCustomDefectCommand}" />

                    <Expander
                        ExpandDirection="Down"
                        Header="Defect"
                        IsExpanded="True">
                        <StackPanel>
                            <Label>Error flag:</Label>
                            <ComboBox
                                ItemsSource="{Binding ErrorFlags}"
                                SelectedItem="{Binding DefectErrorFlag, Mode=TwoWay}" />
                            <Label>Location:</Label>
                            <TextBox
                                Watermark="Location"
                                Text="{Binding DefectLocation, Mode=TwoWay}">
                            </TextBox>
                            <Label>Error code:</Label>
                            <TextBox
                                Watermark="Error code"
                                Text="{Binding DefectErrorCode, Mode=TwoWay}">
                            </TextBox>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </controls:GlassCard>
            
            <!-- Show windows buttons -->
            <controls:GlassCard
                Margin="{StaticResource DefaultMargin}">
                
                <StackPanel
                    Spacing="{StaticResource DefaultSpacing}">
                    
                    <Button
                        Classes="Flat Outlined"
                        Content="Show pass view"
                        Command="{Binding ShowPassViewCommand}" />
                    
                    <Button
                        Classes="Flat Outlined"
                        Content="Show repair view"
                        Command="{Binding ShowRepairViewCommand}" />
                    
                    <Button
                        Classes="Flat Outlined"
                        Content="Show stop machine view"
                        Command="{Binding ShowStopMachineViewCommand}" />
                    
                    <Button
                        Classes="Flat Outlined"
                        Content="Show stop line view"
                        Command="{Binding ShowStopLineViewCommand}" />
                </StackPanel>
            </controls:GlassCard>
        </WrapPanel>
    </ScrollViewer>
</UserControl>