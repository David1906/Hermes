<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:controls="clr-namespace:SukiUI.Controls;assembly=SukiUI"
             xmlns:converters="clr-namespace:Hermes.Common.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:lang="clr-namespace:Hermes.Language;assembly=Hermes.Language"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sfcSimulator="clr-namespace:Hermes.Features.SfcSimulator"
             xmlns:theme="clr-namespace:SukiUI.Theme;assembly=SukiUI"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             mc:Ignorable="d" d:DesignWidth="1250" d:DesignHeight="650"
             x:Class="Hermes.Features.SfcSimulator.SfcSimulatorView"
             x:DataType="sfcSimulator:SfcSimulatorViewModel">

    <UserControl.Styles>
        <Style Selector="TextBlock.Running">
            <Setter Property="Text" Value="{x:Static lang:Resources.txt_running}" />
        </Style>
        <Style Selector="TextBlock.Stopped">
            <Setter Property="Text" Value="{x:Static lang:Resources.txt_stopped}" />
        </Style>
    </UserControl.Styles>

    <ScrollViewer HorizontalAlignment="Center"
                  VerticalScrollBarVisibility="Auto">

        <WrapPanel Margin="{StaticResource DefaultMargin}"
                   theme:WrapPanelExtensions.AnimatedScroll="True"
                   Orientation="Horizontal">

            <!-- Sfc Simulator -->
            <controls:GlassCard Margin="{StaticResource DefaultMargin}">
                <StackPanel VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Background="Transparent"
                            Spacing="{StaticResource DefaultSpacing}">

                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Spacing="5">

                        <avalonia:MaterialIcon VerticalAlignment="Center"
                                               Foreground="{DynamicResource SukiText}"
                                               Margin="0 0 10 0"
                                               Width="80"
                                               Height="80"
                                               Kind="{Binding IsRunning, Converter={x:Static converters:BoolToIconConverters.Connection}}" />

                        <StackPanel VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    MinWidth="250"
                                    Spacing="10">

                            <StackPanel Orientation="Horizontal"
                                        Spacing="2">

                                <TextBlock VerticalAlignment="Center"
                                           Classes="h4"
                                           Margin="0">
                                    <Run Text="{x:Static lang:Resources.txt_status}" />
                                    <Run Text=":" />
                                </TextBlock>

                                <TextBlock VerticalAlignment="Center"
                                           Classes.Stopped="{Binding !IsRunning}"
                                           Classes.Running="{Binding IsRunning}" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <Button Classes="Flat"
                            Content="{x:Static lang:Resources.txt_start}"
                            Command="{Binding StartCommand}"
                            IsVisible="{Binding !IsRunning}" />

                    <Button Classes="Flat Accent"
                            Content="{x:Static lang:Resources.txt_stop}"
                            Command="{Binding StopCommand}"
                            IsVisible="{Binding IsRunning}" />

                    <TextBlock Classes="Caption">
                        <Run Text="{x:Static lang:Resources.c_sfc_simulator_response_mode}" />
                        <Run Text=":" />
                    </TextBlock>

                    <ComboBox ItemsSource="{Binding SfcErrorTypes}"
                              SelectedItem="{Binding Mode, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Text="{Binding Converter={x:Static converters:EnumToTranslatedTextConverters.Generic}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </controls:GlassCard>

            <!-- Create logfile buttons -->
            <controls:GlassCard Margin="{StaticResource DefaultMargin}">
                <StackPanel
                    VerticalAlignment="Center"
                    Spacing="{StaticResource DefaultSpacing}">

                    <Button Classes="Flat Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_create_log_pass}"
                            Command="{Binding CreatePassLogfileCommand}" />

                    <Button Classes="Flat Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_create_log_pass_with_defect}"
                            Command="{Binding CreatePassLogfileWithCustomDefectCommand}" />

                    <Button Classes="Flat Accent Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_create_log_fail}"
                            Command="{Binding CreateFailLogfileCommand}" />

                    <Button Classes="Flat Accent Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_create_log_critical_fail}"
                            Command="{Binding CreateCriticalFailLogfileCommand}" />

                    <Button Classes="Flat Accent Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_create_log_fail_with_custom_defect}"
                            Command="{Binding CreateFailLogfileWithCustomDefectCommand}" />

                    <Expander ExpandDirection="Down"
                              Header="{x:Static lang:Resources.txt_defect}"
                              IsExpanded="True">
                        <StackPanel>
                            <TextBlock Classes="Caption">
                                <Run Text="{x:Static lang:Resources.txt_error_flag}" />
                                <Run Text=":" />
                            </TextBlock>
                            <ComboBox ItemsSource="{Binding ErrorFlags}"
                                      SelectedItem="{Binding DefectErrorFlag, Mode=TwoWay}" />
                            <TextBlock Classes="Caption">
                                <Run Text="{x:Static lang:Resources.txt_location}" />
                                <Run Text=":" />
                            </TextBlock>
                            <TextBox Watermark="{x:Static lang:Resources.txt_location}"
                                     Text="{Binding DefectLocation, Mode=TwoWay}">
                            </TextBox>
                            <TextBlock Classes="Caption">
                                <Run Text="{x:Static lang:Resources.txt_error_code}" />
                                <Run Text=":" />
                            </TextBlock>
                            <TextBox Watermark="{x:Static lang:Resources.txt_error_code}"
                                     Text="{Binding DefectErrorCode, Mode=TwoWay}">
                            </TextBox>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </controls:GlassCard>

            <!-- Show windows buttons -->
            <controls:GlassCard Margin="{StaticResource DefaultMargin}">

                <StackPanel Spacing="{StaticResource DefaultSpacing}">

                    <Button Classes="Flat Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_show_pass}"
                            Command="{Binding ShowPassViewCommand}" />

                    <Button Classes="Flat Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_show_repair}"
                            Command="{Binding ShowRepairViewCommand}" />

                    <Button Classes="Flat Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_show_repair_with_message}"
                            Command="{Binding ShowRepairViewWithMessageCommand}" />

                    <Button Classes="Flat Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_show_stop_machine}"
                            Command="{Binding ShowStopMachineViewCommand}" />

                    <Button Classes="Flat Outlined"
                            Content="{x:Static lang:Resources.c_sfc_sim_show_top_line}"
                            Command="{Binding ShowStopLineViewCommand}" />
                </StackPanel>
            </controls:GlassCard>
        </WrapPanel>
    </ScrollViewer>
</UserControl>