// <auto-generated />
using System;
using Hermes.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hermes.AppData.Migrations.Local
{
    [DbContext(typeof(HermesLocalContext))]
    [Migration("20241021021018_001")]
    partial class _001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Hermes.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ErrorFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("StopId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitUnderTestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StopId");

                    b.HasIndex("UnitUnderTestId");

                    b.ToTable("Defects", (string)null);
                });

            modelBuilder.Entity("Hermes.Models.SfcResponse", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<int>("ResponseType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SfcResponses", (string)null);
                });

            modelBuilder.Entity("Hermes.Models.Stop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRestored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stops", (string)null);
                });

            modelBuilder.Entity("Hermes.Models.UnitUnderTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFail")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SfcResponseId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StopId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SfcResponseId");

                    b.HasIndex("StopId");

                    b.ToTable("UnitsUnderTest", (string)null);
                });

            modelBuilder.Entity("Hermes.Models.Defect", b =>
                {
                    b.HasOne("Hermes.Models.Stop", null)
                        .WithMany("Defects")
                        .HasForeignKey("StopId");

                    b.HasOne("Hermes.Models.UnitUnderTest", null)
                        .WithMany("Defects")
                        .HasForeignKey("UnitUnderTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hermes.Models.UnitUnderTest", b =>
                {
                    b.HasOne("Hermes.Models.SfcResponse", "SfcResponse")
                        .WithMany()
                        .HasForeignKey("SfcResponseId");

                    b.HasOne("Hermes.Models.Stop", "Stop")
                        .WithMany()
                        .HasForeignKey("StopId");

                    b.Navigation("SfcResponse");

                    b.Navigation("Stop");
                });

            modelBuilder.Entity("Hermes.Models.Stop", b =>
                {
                    b.Navigation("Defects");
                });

            modelBuilder.Entity("Hermes.Models.UnitUnderTest", b =>
                {
                    b.Navigation("Defects");
                });
#pragma warning restore 612, 618
        }
    }
}
