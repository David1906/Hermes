// <auto-generated />
using System;
using Hermes.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hermes.AppData.Migrations
{
    [DbContext(typeof(HermesContext))]
    partial class HermesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Hermes.Models.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ErrorFlag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("LogfileId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UnitUnderTestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UnitUnderTestId");

                    b.ToTable("Defects", (string)null);
                });

            modelBuilder.Entity("Hermes.Models.SfcResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("TEXT");

                    b.Property<int>("ErrorType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitUnderTestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UnitUnderTestId");

                    b.ToTable("SfcResponses", (string)null);
                });

            modelBuilder.Entity("Hermes.Models.Stop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRestored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SfcResponseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SfcResponseId");

                    b.ToTable("Stops", (string)null);
                });

            modelBuilder.Entity("Hermes.Models.UnitUnderTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFail")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UnitsUnderTest", (string)null);
                });

            modelBuilder.Entity("Hermes.Models.Defect", b =>
                {
                    b.HasOne("Hermes.Models.UnitUnderTest", null)
                        .WithMany("Defects")
                        .HasForeignKey("UnitUnderTestId");
                });

            modelBuilder.Entity("Hermes.Models.SfcResponse", b =>
                {
                    b.HasOne("Hermes.Models.UnitUnderTest", "UnitUnderTest")
                        .WithMany()
                        .HasForeignKey("UnitUnderTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitUnderTest");
                });

            modelBuilder.Entity("Hermes.Models.Stop", b =>
                {
                    b.HasOne("Hermes.Models.SfcResponse", "SfcResponse")
                        .WithMany()
                        .HasForeignKey("SfcResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SfcResponse");
                });

            modelBuilder.Entity("Hermes.Models.UnitUnderTest", b =>
                {
                    b.Navigation("Defects");
                });
#pragma warning restore 612, 618
        }
    }
}
