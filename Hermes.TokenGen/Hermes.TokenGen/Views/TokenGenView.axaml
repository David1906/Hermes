<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:vm="clr-namespace:Hermes.TokenGen.ViewModels"
             xmlns:p1="clr-namespace:SukiUI.Theme;assembly=SukiUI"
             mc:Ignorable="d" d:DesignWidth="421" d:DesignHeight="823"
             x:Class="Hermes.TokenGen.Views.TokenGenView"
             x:DataType="vm:TokenGenViewModel">
    <Grid RowDefinitions="3*,2*,Auto">
        <Svg Grid.Row="0" Stretch="Fill"
             Path="avares://Hermes.TokenGen/Assets/token_gen_top_background.svg" />

        <Button Grid.Row="0"
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                Margin=" 0 35 0 0"
                Width="150"
                Command="{Binding IconTappedCommand}">

            <Button.Styles>
                <Style Selector="Button:pressed">
                    <Setter Property="Background" Value="Transparent" />
                    <Style Selector="^ /template/ Border">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="CornerRadius" Value="0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Style>
                </Style>
                <Style Selector="Button">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="CornerRadius" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </Button.Styles>

            <Svg Width="130"
                 HorizontalAlignment="Center"
                 Path="avares://Hermes.TokenGen/Assets/hermes_logo.svg" />
        </Button>
        <StackPanel Grid.Row="1"
                    Spacing="10"
                    VerticalAlignment="Top"
                    Margin="30 0">

            <StackPanel IsVisible="{Binding User.IsManager}"
                        Width="260">
                <TextBlock Classes="Caption"
                           Margin="10 0 0 0"
                           Foreground="{DynamicResource SukiAccentColor}"
                           Text="Employee number" />
                <TextBox Classes="Accent"
                         Height="50"
                         p1:TextBoxExtensions.AddDeleteButton="True"
                         Text="{Binding EmployeeNumber, Mode= TwoWay}" />
            </StackPanel>


            <DatePicker HorizontalAlignment="Center"
                        Width="250"
                        Height="50"
                        SelectedDate="{Binding SelectedDate, Mode=TwoWay}">
                <DatePicker.Resources>
                    <SolidColorBrush x:Key="SukiPrimaryColor" Color="Purple" />
                    <SolidColorBrush x:Key="SukiPrimaryColor10" Color="{DynamicResource SukiAccentColor10}" />
                </DatePicker.Resources>
                <DatePicker.Styles>
                    <Style Selector="Border.Card">
                        <Setter Property="Background" Value="{DynamicResource SukiDialogBackground}" />
                    </Style>
                    <Style Selector="TextBlock">
                        <Setter Property="Foreground" Value="White" />
                    </Style>
                </DatePicker.Styles>
            </DatePicker>

            <Button Classes="Flat Accent" HorizontalAlignment="Center"
                    Margin="0 20 0 0"
                    Height="50"
                    Content="Generate"
                    Command="{Binding GenerateTokenCommand}" />
        </StackPanel>

        <StackPanel Grid.Row="2"
                    Margin="20">

            <Grid>
                <Button Classes="Flat Accent"
                        Margin=" 0 5"
                        ToolTip.Tip="Show all my department users"
                        HorizontalAlignment="Right"
                        Padding="15"
                        Command="{Binding ShareCommand}"
                        IsVisible="{Binding !IsDesktop}">
                    <materialIcons:MaterialIcon Kind="ShareVariant"
                                                Width="20"
                                                Height="20" />
                </Button>

                <Button Classes="Flat Accent"
                        Margin=" 0 5"
                        ToolTip.Tip="Show all my department users"
                        HorizontalAlignment="Left"
                        Padding="15"
                        Command="{Binding ShowMultipleUsersTokenGenCommand}"
                        IsVisible="{Binding CanShowAllSubUsers}">
                    <materialIcons:MaterialIcon Kind="Users"
                                                Width="20"
                                                Height="20" />
                </Button>
            </Grid>

            <Border Grid.Row="2"
                    x:Name="TokenBorder"
                    Background="{DynamicResource SukiAccentColor}"
                    CornerRadius="5"
                    Padding="10">
                <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="Tapped" SourceObject="TokenBorder">
                        <ia:InvokeCommandAction
                            Command="{Binding CopyTokenToClipboardCommand}" />
                    </ia:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <TextBlock
                    Classes="h4"
                    Margin="0"
                    Foreground="White"
                    TextAlignment="Center"
                    Text="{Binding Token}">
                </TextBlock>
            </Border>

            <Grid Margin=" 5 10 5 0">
                <TextBlock Classes=""
                           HorizontalAlignment="Left"
                           Foreground="{DynamicResource SukiAccentColor}">
                    <Run Text="ID: " />
                    <Run Text="{Binding EmployeeNumber}" />
                </TextBlock>

                <TextBlock Classes=""
                           HorizontalAlignment="Right"
                           Foreground="{DynamicResource SukiAccentColor}">
                    <Run Text="Department: " />
                    <Run Text="{Binding User.Department}" />
                </TextBlock>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>